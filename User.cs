//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WirenetApp
{
   // using ServiceStack.DataAnnotations;
    //using ServiceStack.DataAnnotations;
    using System;
    using System.Collections.Generic;
   using System.ComponentModel.DataAnnotations;
    using System.Web.Mvc;

    public partial class User
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public User()
        {
            this.UserServices = new HashSet<UserService>();
        }

        public int Uid { get; set; }
        [Required]
        public string FullName { get; set; }
        [Required]
        [RegularExpression("^[6-9]{1}[0-9]{9}$", ErrorMessage = "Invalid mobile number")]
        public long Phoneno { get; set; }
        [Display(Name = "Email address")]
        [Required(ErrorMessage = "The email address is required")]
        [EmailAddress(ErrorMessage = "Invalid Email Address")]
        public string Emailid { get; set; }

        [Required]
        [RegularExpression("^[UI]{2}[0-9]{5}$", ErrorMessage = "The username should be in the fromat like 'UI' followed by 5 numbers")]
        [Remote("IsUserNameExist", "Unique", AdditionalFields = "Id",
                ErrorMessage = "Username name already exists")]
        public string Username { get; set; }
        [Required]
        public string Password { get; set; }
        [Required]
        public string Address { get; set; }
    
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<UserService> UserServices { get; set; }
    }
}
